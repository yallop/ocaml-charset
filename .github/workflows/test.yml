name: Charset
on: [push, pull_request, workflow_dispatch]
jobs:
  install:
    name: Install
    runs-on: ${{ matrix.os }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    strategy:
      fail-fast: false
      matrix:
        include:
          - ocaml-compiler: 4.11.1
            os: ubuntu-latest
          - ocaml-compiler: 4.13.1
            os: ubuntu-latest
          - ocaml-compiler: 4.13.1
            os: macos-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true

      - name: Install
        run: opam install . --deps-only --with-test

      - name: Build
        run: opam exec -- dune build -p charset

      - name: Test
        run: opam exec -- dune exec lib_test/test.exe --  -ci true

      - name: Bench
        if: ${{ matrix.ocaml-compiler == '4.13.1' && matrix.os == 'ubuntu-latest' }}
        run: |
          opam install --yes core_bench.v0.14.0
          sudo apt install -y gnuplot
          opam exec -- make bench

      - name: Save benchmark results
        if: ${{ matrix.ocaml-compiler == '4.13.1' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: charset-bench
          path: |
            benchmarks/csv/*.csv
            benchmarks/csv/*.svg
